Feature: Loguear en el sistema

  Scenario: Loguear sin credenciales
    Given Un usuario que ingresa al login
    When El usuario no ingresa ninguna credencial
    Then La pagina mjuestra un mensaje de error indicando que el campo esta vacio

  Scenario: Loguear con credenciales invalidas
    Given Un usuario que se dirige al login
    When El usuario ingresa credenciales invalidas
    Then La pagina le muestra un mensaje de error indicando que las credenciales son invalidas

  Scenario: Loguear con credenciales validas
    Given Un usuario que se dirige al login
    When El usuario ingresa credenciales validas
    Then La pagina valida las credenciales e ingresa a la pagina principal

  Scenario: Loguear con solo un valor
    Given Un usuario que se dirige al login
    When El usuario solo ingresa una credencial valida
    Then La pagina le muestra un mensaje de error indicando que ambos campos se deben llenar

  Scenario: Redireccion a a pagina Olvido su contraseña
    Given Un usuario se dirige al login
    When El usuario clickea en Olvido su contraseña y llena los campos
    Then La pagina muestra un mensaje notificando el cambio
    
    
    

  Scenario: Loguear sin credenciales
    Given Un usuario que ingresa al login
    When El usuario no ingresa ninguna credencial
    Then La pagina muestra un mensaje de error indicando que el usuario esta vacio

  Scenario: Loguear concredenciales
    Given Un usuario que ingresa al login
    When El usuario ingresa credenciales invalidas
    Then La pagina le muestra un mensaje de error indicando que las credenciales son invalidas

  Scenario: Loguear con credenciales validas
    Given Un usuario que ingresa al login
    When El usuario ingresa credenciales validas
    Then La pagina valida credenciales e ingresa a la pagina principal
    
    
    
    
    
    
    /*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Tarea;

import org.junit.jupiter.api.Test;
import org.openqa.selenium.WebDriver;
import org.junit.Before;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.Before;

class LibraryTest {
	
private WebDriver driver; //Instancia del Webdriver para poder interactuar con navegador
	
	@Before
	public void configuration() {
		
		System.setProperty("webdriver.chrome.driver", "src/test/resources/chromedriver.exe");
	
		ChromeOptions options = new ChromeOptions(); //Instanciamos las opciones (Creamos la lista de)
		
		options.addArguments("--incognito"); //Agregamos las opciones
		
		driver = new ChromeDriver(options); //Le especificamos que navegador vamos a utilizar
		
		driver.manage().window().maximize(); //Va a maximizar la ventana
	
		driver.get("https://www.google.com/");
		
	}
	
	
	
	
	
    @Test void someLibraryMethodReturnsTrue() {
        Library classUnderTest = new Library();
        assertTrue(classUnderTest.someLibraryMethod(), "someLibraryMethod should return 'true'");
    }
}
